name: CI

on:
  push:

env:
  REDIS_HOST: ${{ secrets.REDIS_HOST }}
  REDIS_PORT: ${{ secrets.REDIS_PORT }}
  REDIS_PASS: ${{ secrets.REDIS_PASS }}
  REDIS_USER: ${{ secrets.REDIS_USER }}
  ARCHIVE_REPO_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  typo-scan-exclude-match: '[''typos/**'', ''public/**'']'
  REPORT_ARCHIVE_OWNER: open-source-crawler-test
  REPORT_ARCHIVE_REPO: repo-scan-archive-test
  ARCHIVE_REPO_BRANCH_TARGET: main
  ARCHIVE_COMMIT_EMAIL: commit-bot@gmail.com

jobs:
  redis_bash_ci:
    name: "Run unit tests"
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
      - uses: actions/checkout@v3

      - name: Cache redis-cli
        uses: actions/cache@v3
        with:
            path: "/usr/bin/redis-cli"
            key: redis-cli-version

      - name: ‚¨áÔ∏è Install redis-cli
        run: |
          if ! command -v redis-cli &> /dev/null
          then
              sudo apt-get install redis
          fi

      - name: Cache bats
        uses: actions/cache@v3
        with:
            path: "/usr/bin/bats"
            key: bats-version
      
      - name: ‚¨áÔ∏è Install bats
        run: |
          if ! command -v bats &> /dev/null
          then
              sudo apt-get install bats
          fi

      - name: ‚úÖ run unit and RedisDB integration tests
        run: REDIS_HOST=${{ env.REDIS_HOST }} REDIS_PORT=${{ env.REDIS_PORT }} REDIS_USER=${{ env.REDIS_USER }} REDIS_PASS=${{ env.REDIS_PASS }} bats ./__tests__/*

      - name: "‚è≠ Get (mock) next repo URL from queue"
        run: |
          REPOSITORY="gatsbyjs/gatsby"
          echo "repository=${REPOSITORY}" >> $GITHUB_ENV

      - name: "üïµÔ∏è‚Äç‚ôÇÔ∏è Preform repository scan"
        if: ${{ env.repository }}
        uses: open-source-crawler-test/repo-scan-test@main
        with:
          repository: ${{ env.repository }}
          typo-scan-exclude-match: ${{ env.typo-scan-exclude-match }}
          REPORT_ARCHIVE_REPO: ${{ env.REPORT_ARCHIVE_REPO }}
          ARCHIVE_REPO_BRANCH_TARGET: ${{ env.ARCHIVE_REPO_BRANCH_TARGET }}
          ARCHIVE_COMMIT_EMAIL: ${{ env.ARCHIVE_COMMIT_EMAIL }}
          ARCHIVE_REPO_ACCESS_TOKEN: ${{ env.ARCHIVE_REPO_ACCESS_TOKEN }}
