name: üßê Repo Analyzer

on:
  workflow_dispatch:
  push:

jobs:
  repo_scan:
    name: "üïµÔ∏è‚Äç‚ôÇÔ∏è Preform repository scan"
    runs-on: ubuntu-latest

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379
    
    steps:
      - uses: action/checkout@v3

      - run: |
        chmod +x scripts/redis-test.sh
        cd scripts
        # ./redis-test.sh <username> <password> <host> <port> <database-number>
        # redis-cli -u redis://<host>:<port>/<database-number>
        ./redis-test.sh 127.0.0.1 6379

      - name: "‚è≠ Get next repo URL from queue"
        run: |
          REPOSITORY="gatsbyjs/gatsby"
          echo "repository=${REPOSITORY}" >> $GITHUB_ENV

      - name: "üïµÔ∏è‚Äç‚ôÇÔ∏è Preform repository scan"
        if: ${{ env.repository }}
        uses: open-source-crawler-test/repo-scan-test@main
        with:
          repository: ${{ env.repository }}
          typo-scan-exclude-match: '[''typos/**'', ''public/**'']'
          REPORT_ARCHIVE_OWNER: open-source-crawler-test
          REPORT_ARCHIVE_REPO: repo-scan-archive-test
          ARCHIVE_REPO_BRANCH_TARGET: main
          ARCHIVE_COMMIT_EMAIL: commit-bot@gmail.com
          ARCHIVE_REPO_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
